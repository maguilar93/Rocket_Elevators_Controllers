elevator_1 = {
    position_1: TRUE
    capacity_1: TRUE
}

elevator_2 = {
    position_2: TRUE
    capacity_2: TRUE
}

SEQUENCE INIT 
    FOR EACH elevator IN column
        SET nbFloors TO 10
        SET nbColumn TO 1 
        SET nbElevators TO 2
        SET current_position TO position
        SET idle TO TRUE
        SET directionUp TO FALSE
        SET directionDown TO FALSE
        SET buttonLight TO FALSE
        SET timer TO 0 (seconds)
        SET requests TO EMPTY
        SET obstacles TO FALSE
    END FOR
END SEQUENCE

'----------------------------------------------------------Move elevator DOWN----------------------------------------------------------'
SEQUENCE moveDown
        DECREMENT current_position
        SET idle TO FALSE
        SET directionUp TO FALSE
        SET directionDown TO TRUE
END SEQUENCE

'------------------------------------------------------------Move elevator UP------------------------------------------------------------'
SEQUENCE moveUp 
        INCREMENT current_position
        SET idle TO FALSE
        SET directionUp TO TRUE
        SET directionDown TO FALSE
END SEQUENCE

'--------------------------------------------------------------Close doors---------------------------------------------------------------'
SEQUENCE closeDoors  
    REPEAT 
        IF doors EQUALS open  THEN
            REPEAT 
                INCREMENT timer 
            UNTIL 3
            RETURN timer TO 0

            IF obstacles THEN
                open doors 
            ELSE 
                close doors
            END IF
        END IF
    UNTIL doors EQUALS closed
END SEQUENCE

'-------------------------------------------------------------Start Timers-----------------------------------------------------------'
SEQUENCE startTimers 
        REPEAT
            INCREMENT timer
        UNTIL timer EQUALS 600 
        RETURN timer TO 0
END SEQUENCE

'------------------------------------------------------------Return to position---------------------------------------------------------'
SEQUENCE backToPosition 
    FOR EACH elevator IN column
        IF current_position > position1 THEN
            REPEAT 
                CALL startTimers
                CALL moveDown
            UNTIL current_position EQUALS position1
        END IF

        IF current_position > position2 THEN
            REPEAT 
                CALL startTimers
                CALL moveDown
            UNTIL current_position EQUALS position2
        ELSE IF 
            REPEAT
                CALL startTimers
                CALL moveUp
            UNTIL current_position EQUALS position2
        END IF
    END FOR
END SEQUENCE

'---------------------------------------------------------Origin with timer------------------------------------------------------------'
SEQUENCE originOnTimer 
    FOR EACH elevator IN column
        IF timer >= 600  THEN 
            CALL backToPosition 
        END IF
    ENDFOR
END SEQUENCE

'---------------------------------------------------------Inside buttons commands------------------------------------------------------'
SEQUENCE elevatorButtons 
    IF elevatorButton > current_position
        REPEAT
            SET buttonLight TO TRUE
            CALL moveUp
        UNTIL elevatorButton EQUALS current_position
        OPEN doors
    ELSE IF elevatorButton < current_position
        REPEAT 
            SET buttonLight TO TRUE
            CALL moveDown
        UNTIL elevatorButton EQUALS current_position
        OPEN doors
    ELSE 
        OPEN doors
    END IF
END SEQUENCE

'------------------------------------------------------Outside (floors) buttons commands-----------------------------------------------'
SEQUENCE floorButtons using elevator
    CALL closeDoors 
    CALL setDirection
        IF floorButton > current_position AND (directionUp OR idle)
            SET buttonLight TO TRUE
            CALL moveUp
        ELSE IF floorButton < current_position AND (directionDown OR idle)
            SET buttonLight TO TRUE
            CALL moveDown  
        ELSE 
            OPEN doors
            SET buttonLight TO FALSE
        END IF
    CALL closeDoors 
END SEQUENCE

'-------------------------------------------------------------Add requests-------------------------------------------------------------'
SEQUENCE addRequests 
    IF elevatorButton is pressed THEN
        IF elevatorButton > position OR elevatorButton < position
            ADD request TO requests
        ELSE  
            REMOVE request TO requests
        END IF
    END IF
END SEQUENCE
    
'------------------------------------------------------------Match request with direction---------------------------------------------'
SEQUENCE setDirection
    CALL addRequests
        FOR EACH request IN requests
            IF directionUp EQUALS TRUE THEN
                REPEAT 
                    directionUp 
                UNTIL requests IS EMPTY
            ELSE IF directionDown EQUALS TRUE THEN
                REPEAT 
                    directionDown EQUALS TRUE THEN
                UNTIL requests IS EMPTY
            END IF
        END FOR
END SEQUENCE

'---------------------------------------------------------Measure Capacity------------------------------------------------------------'
SEQUENCE measureCapacity
    READ weight from elevator
        IF weight > capacity THEN 
            SET capacity TO FALSE
        ELSE 
            SET capacity TO TRUE
        END IF
END SEQUENCE

'----------------------------------------------------------Decide which elevator comes------------------------------------------------'
SEQUENCE decideElevator
    CALL measureCapacity
        IF capacity1 AND capacity2 THEN
            IF |floorButton - position1| > |floorButton - position2| THEN
                CALL floorButtons using elevator2
            ELSE 
                CALL floorButtons using elevator1
            END IF
        ELSE IF capacity1 THEN 
            CALL floorButtons using elevator1
        ELSE
            CALL floorButtons using elevator2
        ENDIF
END SEQUENCE

'-----------------------------------------------------------Close Button--------------------------------------------------------------'
SEQUENCE closeButton
    IF doors EQUALS open THEN
        SET timer TO 3 
            IF obstacles THEN
                open doors 
            ELSE 
                close doors
            END IF
        SET timer to 0
    ELSE
        DO NOTHING
END SEQUENCE
    
'----------------------------------------------------------Phone Button---------------------------------------------------------------'
SEQUENCE phoneButton
    IF phone is pressed THEN 
        DIAL 911
    ENDIF
END SEQUENCE

'----------------------------------------------------------Open Button---------------------------------------------------------------'
SEQUENCE openButton
    IF idle EQUALS TRUE AND doors EQUALS closed THEN
        SET doors TO open
    ENDIF 
END SEQUENCE

'-----------------------------------------------------------WHILE BATTERY IS ON---------------------------------------------------------'
WHILE battery IS ON 
    CALL INIT

    CALL originOnTimer

    IF floorButton IS pressed THEN
        CALL floorButtons
    ENDIF

    IF open IS pressed THEN
        CALL openButton
    ENDIF

    IF phone IS pressed THEN
        CALL phoneButton
    ENDIF

    IF floorButton IS pressed THEN
        CALL decideElevator
    ENDIF
ENDWHILE